{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./register.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./register.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component, inject, signal } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormBuilder, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from '../../services/auth.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nlet RegisterComponent = class RegisterComponent {\n  fb;\n  registerForm;\n  userService = inject(UserService);\n  authService = inject(AuthService);\n  alreadyAccount = signal(false);\n  router = inject(Router);\n  isLoading = false;\n  constructor(fb) {\n    this.fb = fb;\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.isLoading = true;\n      console.log('Registration successful', this.registerForm.value);\n      this.userService.getUserByEmail(this.registerForm.value.email).subscribe(res => {\n        console.log('bbbb', res);\n        this.isLoading = false;\n        this.alreadyAccount.set(true);\n      }, error => {\n        this.isLoading = false;\n        this.userService.addUser(this.registerForm.value.name, this.registerForm.value.email).subscribe(res => {\n          this.authService.login(res.data.addUser.name, res.data.addUser.email, res.data.addUser.id);\n          this.router.navigate(['/blog']);\n        });\n      });\n    }\n  }\n  static ctorParameters = () => [{\n    type: FormBuilder\n  }];\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterLink, MatProgressSpinnerModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["CommonModule","Component","inject","signal","Validators","FormBuilder","ReactiveFormsModule","FormsModule","Router","RouterLink","UserService","AuthService","MatProgressSpinnerModule","RegisterComponent","fb","registerForm","userService","authService","alreadyAccount","router","isLoading","constructor","group","name","required","email","onSubmit","valid","console","log","value","getUserByEmail","subscribe","res","set","error","addUser","login","data","id","navigate","__decorate","selector","imports","template","__NG_CLI_RESOURCE__0"],"sources":["D:\\myWork\\posts\\post\\blog_GraphQl_nodejs_angular19\\blog-frontend\\src\\app\\auth\\register\\register.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, inject, signal } from '@angular/core';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { FormBuilder, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterLink,MatProgressSpinnerModule],\r\n  templateUrl: './register.component.html',\r\n  styleUrl: './register.component.scss',\r\n})\r\nexport class RegisterComponent {\r\n  registerForm: FormGroup;\r\n  userService = inject(UserService);\r\n  authService = inject(AuthService);\r\n  alreadyAccount = signal<Boolean>(false);\r\n  router = inject(Router);\r\n  isLoading = false;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.registerForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.valid) {\r\n      this.isLoading = true;\r\n      console.log('Registration successful', this.registerForm.value);\r\n      this.userService.getUserByEmail(this.registerForm.value.email).subscribe(\r\n        (res) => {\r\n          console.log('bbbb', res);\r\n          this.isLoading = false;\r\n          this.alreadyAccount.set(true);\r\n        },\r\n        (error: Error) => {\r\n          this.isLoading = false;\r\n          this.userService\r\n            .addUser(\r\n              this.registerForm.value.name,\r\n              this.registerForm.value.email\r\n            )\r\n            .subscribe((res: any) => {\r\n              this.authService.login(\r\n                res.data.addUser.name,\r\n                res.data.addUser.email,\r\n                res.data.addUser.id\r\n              );\r\n              this.router.navigate(['/blog']);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACzD,SAAoBC,UAAU,QAAQ,gBAAgB;AACtD,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,WAAW,QAAQ,gBAAgB;AAC9E,SAASC,MAAM,EAAEC,UAAU,QAAQ,iBAAiB;AACpD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAAQC,wBAAwB,QAAO,oCAAoC;AAQpE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQRC,EAAA;EAPpBC,YAAY;EACZC,WAAW,GAAGd,MAAM,CAACQ,WAAW,CAAC;EACjCO,WAAW,GAAGf,MAAM,CAACS,WAAW,CAAC;EACjCO,cAAc,GAAGf,MAAM,CAAU,KAAK,CAAC;EACvCgB,MAAM,GAAGjB,MAAM,CAACM,MAAM,CAAC;EACvBY,SAAS,GAAG,KAAK;EAEjBC,YAAoBP,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,EAAE,CAACQ,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACoB,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACrB,UAAU,CAACoB,QAAQ,EAAEpB,UAAU,CAACqB,KAAK,CAAC;KACpD,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACX,YAAY,CAACY,KAAK,EAAE;MAC3B,IAAI,CAACP,SAAS,GAAG,IAAI;MACrBQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAACd,YAAY,CAACe,KAAK,CAAC;MAC/D,IAAI,CAACd,WAAW,CAACe,cAAc,CAAC,IAAI,CAAChB,YAAY,CAACe,KAAK,CAACL,KAAK,CAAC,CAACO,SAAS,CACrEC,GAAG,IAAI;QACNL,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEI,GAAG,CAAC;QACxB,IAAI,CAACb,SAAS,GAAG,KAAK;QACtB,IAAI,CAACF,cAAc,CAACgB,GAAG,CAAC,IAAI,CAAC;MAC/B,CAAC,EACAC,KAAY,IAAI;QACf,IAAI,CAACf,SAAS,GAAG,KAAK;QACtB,IAAI,CAACJ,WAAW,CACboB,OAAO,CACN,IAAI,CAACrB,YAAY,CAACe,KAAK,CAACP,IAAI,EAC5B,IAAI,CAACR,YAAY,CAACe,KAAK,CAACL,KAAK,CAC9B,CACAO,SAAS,CAAEC,GAAQ,IAAI;UACtB,IAAI,CAAChB,WAAW,CAACoB,KAAK,CACpBJ,GAAG,CAACK,IAAI,CAACF,OAAO,CAACb,IAAI,EACrBU,GAAG,CAACK,IAAI,CAACF,OAAO,CAACX,KAAK,EACtBQ,GAAG,CAACK,IAAI,CAACF,OAAO,CAACG,EAAE,CACpB;UACD,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CACF;IACH;EACF;;;;;AA3CW3B,iBAAiB,GAAA4B,UAAA,EAN7BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,cAAc;EACxBC,OAAO,EAAE,CAAC3C,YAAY,EAAEM,mBAAmB,EAAEC,WAAW,EAAEE,UAAU,EAACG,wBAAwB,CAAC;EAC9FgC,QAAA,EAAAC,oBAAwC;;CAEzC,CAAC,C,EACWhC,iBAAiB,CA4C7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}